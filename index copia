<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Brake X Liquid Glass - Filtros</title>
<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@500;700&display=swap" rel="stylesheet">
<style>
* { box-sizing: border-box; margin:0; padding:0; }
html, body { height:100%; font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,sans-serif; }
body { background:#f5f5f5; transition: background 0.5s ease, color 0.5s ease; color:#000; }
body.lp-dark, body.dark { background:#121212; color:#fff; }

/* ==== Banner Liquid Glass ==== */
header {
  width: 100%;
  text-align: center;
  padding: 10px 12px;
  border-radius: 0 0 12px 12px;
  backdrop-filter: blur(12px);
  background: rgba(255,255,255,0.25);
  box-shadow: 0 8px 25px rgba(0,0,0,0.15), inset 0 0 15px rgba(255,255,255,0.2);
  display: flex; justify-content: center; align-items: center; gap: 6px; position: relative;
  transition: background 0.5s ease, color 0.5s ease;
}
body.lp-dark header { background: rgba(50,50,50,0.2); box-shadow: 0 8px 25px rgba(0,0,0,0.4), inset 0 0 15px rgba(255,255,255,0.1); }

header h1 { font-family:'Orbitron',sans-serif; font-size:1.1rem; font-weight:700; letter-spacing:1px; color:inherit; display:flex; align-items:center; justify-content:center; gap:6px; opacity:0; animation: fadeDown 1s ease 0.3s forwards; }
header p { font-family:'Orbitron',sans-serif; font-size:0.8rem; color:inherit; opacity:0; animation: fadeUp 1.2s ease 0.6s forwards; }
@keyframes fadeUp { 0%{opacity:0; transform:translateY(8px);} 100%{opacity:1; transform:translateY(0);} }
@keyframes fadeDown { 0%{opacity:0; transform:translateY(-8px);} 100%{opacity:1; transform:translateY(0);} }
@keyframes bounceHeader { 0%{transform:scale(1);}30%{transform:scale(1.15);}50%{transform:scale(0.95);}70%{transform:scale(1.1);}100%{transform:scale(1);} }

/* ==== SVG “X” ==== */
header .header-x { height:1.1em; width:auto; display:inline-block; vertical-align:middle; transition: transform 0.6s ease; }
header .header-x path { transition: fill 0.5s ease; }
body.lp-dark header .header-x path { fill:#FFFFFF; }
body:not(.lp-dark) header .header-x path { fill:#000000; }

/* ==== Botones flotantes ==== */
.floating-buttons { position: fixed; right: 18px; bottom: 18px; display: flex; flex-direction: column; gap:10px; z-index:9999; }
@media (max-width:768px){ .floating-buttons{ bottom: calc(env(safe-area-inset-bottom, 10px)+8px); } }

.liquid-glass {
  position: relative; width:50px; height:50px; border-radius:50%;
  background: linear-gradient(145deg, rgba(255,255,255,0.85), rgba(255,255,255,0.7) 60%);
  box-shadow:0 5px 10px rgba(0,0,0,0.25), inset 0 0 18px rgba(255,255,255,0.3);
  display:flex; align-items:center; justify-content:center;
  cursor:pointer; overflow:hidden; transition: all 0.35s cubic-bezier(0.68,-0.55,0.27,1.55); backdrop-filter: blur(8px);
  border:none; outline:none;
}
body.lp-dark .liquid-glass { background: linear-gradient(145deg, rgba(50,50,50,0.9), rgba(30,30,30,0.85) 60%); box-shadow:0 5px 10px rgba(0,0,0,0.4), inset 0 0 18px rgba(255,255,255,0.1); }

.liquid-glass svg { width:20px; height:20px; fill:none; stroke-width:2; position:absolute; transition: opacity 0.4s, transform 0.4s, stroke 0.4s, filter 0.4s; }
body:not(.lp-dark) .lp-icon-sun{ stroke:#000; } body.lp-dark .lp-icon-sun{ stroke:#000; } .lp-icon-moon{ stroke:#fff; } .lp-icon-arrow{ stroke:#007AFF; animation: arrow-glow 1.5s ease-in-out infinite alternate; } body.lp-dark .lp-icon-arrow{ stroke:#fff; animation: arrow-glow-dark 1.5s ease-in-out infinite alternate; }
@keyframes arrow-glow{0%{filter:drop-shadow(0 0 2px rgba(0,122,255,0.4));}50%{filter:drop-shadow(0 0 6px rgba(0,122,255,0.8));}100%{filter:drop-shadow(0 0 2px rgba(0,122,255,0.4));}}
@keyframes arrow-glow-dark{0%{filter:drop-shadow(0 0 2px rgba(255,255,255,0.4));}50%{filter:drop-shadow(0 0 6px rgba(255,255,255,0.8));}100%{filter:drop-shadow(0 0 2px rgba(255,255,255,0.4));}}

@keyframes bounce{0%{transform:scale(1);}30%{transform:scale(1.15);}50%{transform:scale(0.95);}70%{transform:scale(1.1);}100%{transform:scale(1);} }
@keyframes slide-bounce{0%{transform:translateY(40px) scale(0.8); opacity:0;}60%{transform:translateY(-5px) scale(1.05); opacity:1;}100%{transform:translateY(0) scale(1); opacity:1;}}

.liquid-glass:focus{ outline:none; box-shadow:0 0 0 3px rgba(0,122,255,0.5);}
#upBtn{ opacity:0; transform:translateY(40px); pointer-events:none; transition: opacity 0.3s ease, transform 0.3s ease;}
#upBtn.show{ opacity:1; pointer-events:auto; animation: slide-bounce 0.5s ease forwards;}
@media(max-width:480px){ header h1{ font-size:1rem;} header p{ font-size:0.7rem;} }

/* ==== Filtros ==== */
.glass{
  max-width:720px; margin:20px auto; padding:16px; border-radius:14px;
  background: rgba(255,255,255,0.14); backdrop-filter: blur(12px);
  border:1px solid rgba(255,255,255,0.18); display:flex; flex-direction:column; gap:12px;
}
body.dark .glass{ background: rgba(0,0,0,0.22); border-color: rgba(255,255,255,0.06); }

.filter-title{ font-weight:600; font-size:1rem; margin-bottom:6px; }
.form-input{ width:100%; padding:9px 12px; border-radius:12px; border:1px solid rgba(0,0,0,0.12); background: rgba(255,255,255,0.25); color:inherit; font-size:0.92rem; transition: all .28s ease, box-shadow .28s ease; }
.form-input::placeholder{ color: rgba(0,0,0,0.45);}
.form-input:focus{ outline:none; border-color:#2563eb; box-shadow:0 0 10px rgba(37,99,235,0.14); background: rgba(255,255,255,0.32);}
body.dark .form-input{ background: rgba(0,0,0,0.26); border-color: rgba(255,255,255,0.06); }
body.dark .form-input::placeholder{ color: rgba(255,255,255,0.45); }

.position-container{ display:flex; gap:10px; flex-wrap:wrap; }
.position-btn{ flex:1; min-width:140px; padding:10px 12px; border-radius:12px; border:1px solid rgba(0,0,0,0.12); background: rgba(255,255,255,0.24); text-align:center; cursor:pointer; transition: all .28s ease, transform .18s ease; user-select:none; font-weight:600; }
.position-btn:active{ transform: translateY(1px); }
#positionDelantera.active{ background:#9ec9fb; border-color:#3b82f6; color:#052a5f; transform:translateY(-2px); box-shadow:0 6px 18px rgba(59,130,246,0.10);}
#positionTras.active{ background:#f9b3b3; border-color:#ef4444; color:#5a1414; transform:translateY(-2px); box-shadow:0 6px 18px rgba(239,68,68,0.10);}
body.dark .position-btn{ background: rgba(0,0,0,0.26); color:#fff; border-color: rgba(255,255,255,0.06);}
body.dark #positionDelantera.active{ box-shadow:0 6px 18px rgba(99,179,237,0.06);}
body.dark #positionTras.active{ box-shadow:0 6px 18px rgba(255,128,128,0.05); }

.results-wrapper{ max-width:1100px; margin:20px auto; display:grid; grid-template-columns: repeat(auto-fit,minmax(300px,1fr)); gap:12px;}
.result-card{ padding:12px; border-radius:12px; background: rgba(255,255,255,0.16); backdrop-filter: blur(8px); border:1px solid rgba(255,255,255,0.18); transition: transform .2s ease, box-shadow .2s ease; position:relative;}
body.dark .result-card{ background: rgba(0,0,0,0.26); border-color: rgba(255,255,255,0.06);}
.result-card:hover{ transform:translateY(-4px); box-shadow:0 12px 28px rgba(0,0,0,0.14);}
body.dark .result-card:hover{ box-shadow:0 12px 28px rgba(255,255,255,0.04);}
.result-field{ margin-bottom:6px; font-size:0.92rem; }
.position-badge{ display:inline-block; padding:6px 8px; border-radius:8px; font-weight:700; margin-right:8px; font-size:0.78rem;}
.position-delantera{ background:#dbeafe; color:#1d4ed8; }
.position-trasera{ background:#fef2f2; color:#b91c1c; }
body.dark .position-delantera{ background:#0a2463; color:#63b3ed; }
body.dark .position-trasera{ background:#5a0a0a; color:#fca5a5; }

.trash-container{ display:flex; justify-content:center; align-items:center; margin-top:12px; }
.lp-fbtn{ width:64px; height:64px; border:none; border-radius:50%; cursor:pointer; background: rgba(255,255,255,0.15); backdrop-filter: blur(20px) saturate(250%) brightness(1.3); box-shadow:0 12px 30px rgba(0,0,0,.25), inset 0 0 6px rgba(255,255,255,0.1); display:flex; justify-content:center; align-items:center; overflow:hidden; transition: transform .25s, box-shadow .25s, background .35s; position:relative; }
.lp-fbtn::before{ content:''; position:absolute; top:0; left:0; width:100%; height:100%; border-radius:50%; pointer-events:none; background: radial-gradient(circle at var(--mx,50%) var(--my,50%), rgba(255,255,255,0.25), transparent 70%); mix-blend-mode: screen; filter: blur(6px); animation: glowMove 3s ease-in-out infinite;}
@keyframes glowMove{0%,100%{transform:scale(1) translate(0,0);}50%{transform:scale(1.1) translate(3px,3px);}}
.lp-fbtn:hover{ animation: lp-bounce .4s; }
@keyframes lp-bounce{0%,100%{transform:translateY(0);}50%{transform:translateY(-8px);} }
.lp-fbtn:active{ animation: lp-shake .3s; }
@keyframes lp-shake{0%{transform:translateX(0);}20%{transform:translateX(-2px);}40%{transform:translateX(2px);}60%{transform:translateX(-2px);}80%{transform:translateX(2px);}100%{transform:translateX(0);}}
.count-info{ text-align:center; color:#374151; margin-top:10px; font-size:0.9rem; }
body.dark .count-info{ color:#cbd5e1; }
@media(max-width:720px){ body{padding:12px;} .glass{padding:12px;} }
</style>
</head>
<body>

<!-- Banner -->
<header>
  <h1>
    Brake
    <svg class="header-x" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36 24">
      <path d="M8.98885921,23.8523026 ... (ruta completa de antes) ..." fill="#000000"/>
    </svg>
  </h1>
  <p>Consulta rápida. Frenado seguro.</p>
</header>

<!-- Filtros -->
<section class="glass" aria-label="Filtros de vehículo">
  <div>
    <div class="filter-title">Búsqueda rápida</div>
    <input id="busquedaRapida" class="form-input" placeholder="Marca, Modelo, Ref..." autocomplete="off" />
  </div>
  <div>
    <div class="filter-title">Detalles del vehículo</div>
    <input id="filtroMarca" list="marcas" class="form-input" placeholder="Marca" autocomplete="off" />
    <datalist id="marcas"></datalist>
    <input id="filtroModelo" list="modelos" class="form-input" placeholder="Modelo" autocomplete="off" />
    <datalist id="modelos"></datalist>
    <input id="filtroAnio" list="anios" class="form-input" placeholder="Año" autocomplete="off" inputmode="numeric" />
    <datalist id="anios"></datalist>
  </div>
  <div style="position:relative;">
    <div class="filter-title">Especificaciones técnicas</div>
    <div style="margin-bottom:8px;">
      <input id="filtroOEM" class="form-input" placeholder="OEM (escribe o selecciona...)" autocomplete="off" />
      <div id="oemList" class="autocomplete-list" role="listbox" aria-label="Sugerencias OEM"></div>
    </div>
    <div>
      <input id="filtroFMSI" class="form-input" placeholder="FMSI (escribe o selecciona...)" autocomplete="off" />
      <div id="fmsiList" class="autocomplete-list" role="listbox" aria-label="Sugerencias FMSI"></div>
    </div>
  </div>
  <div>
    <div class="filter-title">Medidas</div>
    <input id="medidaAncho" type="number" step="0.1" class="form-input" placeholder="Ancho (mm)" />
    <input id="medidaAltura" type="number" step="0.1" class="form-input" placeholder="Altura (mm)" />
  </div>
  <div>
    <div class="filter-title">Posición</div>
    <div class="position-container" role="toolbar" aria-label="Posición del vehículo">
      <div id="positionDelantera" class="position-btn" role="button" tabindex="0">Delantera</div>
      <div id="positionTras" class="position-btn" role="button" tabindex="0">Trasera</div>
    </div>
  </div>
  <div class="trash-container">
    <button id="trashBtn" class="lp-fbtn" title="Limpiar filtros">
      <!-- SVG Papelera (igual que antes) -->
    </button>
  </div>
</section>

<!-- Resultados -->
<main>
  <div id="results" class="results-wrapper" aria-live="polite"></div>
  <div class="count-info"><span id="resultCount">0</span> resultados</div>
</main>

<!-- Botones flotantes -->
<div class="floating-buttons">
  <button class="liquid-glass" id="darkBtn" aria-label="Cambiar modo oscuro" aria-pressed="false">
    <svg class="lp-icon-sun" viewBox="0 0 24 24"> ... </svg>
    <svg class="lp-icon-moon" viewBox="0 0 24 24" style="opacity:0;"> ... </svg>
  </button>
  <button class="liquid-glass" id="upBtn" aria-label="Subir al inicio de la página">
    <svg class="lp-icon-arrow" viewBox="0 0 24 24"> ... </svg>
  </button>
</div>

<script>
// Variables y botones
const darkBtn = document.getElementById('darkBtn');
const sunIcon = darkBtn.querySelector('.lp-icon-sun');
const moonIcon = darkBtn.querySelector('.lp-icon-moon');
const upBtn = document.getElementById('upBtn');
const headerX = document.querySelector('.header-x path');

// Modo oscuro
darkBtn.addEventListener('click', ()=> {
  const isDark = document.body.classList.toggle('lp-dark');
  document.body.classList.toggle('dark', isDark);
  darkBtn.setAttribute('aria-pressed', isDark);
  sunIcon.animate(isDark? [{opacity:1, transform:'scale(1)'},{opacity:0, transform:'scale(0.6)'}]
                    : [{opacity:0, transform:'scale(0.6)'},{opacity:1, transform:'scale(1)'}], {duration:800, fill:'forwards', easing:'ease-in-out'});
  moonIcon.animate(isDark? [{opacity:0, transform:'scale(0.6)'},{opacity:1, transform:'scale(1)'}]
                    : [{opacity:1, transform:'scale(1)'},{opacity:0, transform:'scale(0.6)'}], {duration:800, fill:'forwards', easing:'ease-in-out'});
  headerX.parentElement.style.animation='bounceHeader 0.6s cubic-bezier(0.68,-0.55,0.27,1.55)';
  setTimeout(()=>headerX.parentElement.style.animation='',600);
  headerX.setAttribute('fill', isDark ? '#FFFFFF' : '#000000');
});

// Subir página
upBtn.addEventListener('click', ()=>{ window.scrollTo({ top:0, behavior:'smooth' }); });
window.addEventListener('scroll', ()=>{ upBtn.classList.toggle('show', window.scrollY > 150); });

// Datos y filtros
document.addEventListener('DOMContentLoaded', () => {
  const els = {
    busqueda: document.getElementById('busquedaRapida'),
    marca: document.getElementById('filtroMarca'),
    modelo: document.getElementById('filtroModelo'),
    anio: document.getElementById('filtroAnio'),
    oem: document.getElementById('filtroOEM'),
    fmsi: document.getElementById('filtroFMSI'),
    oemList: document.getElementById('oemList'),
    fmsiList: document.getElementById('fmsiList'),
    ancho: document.getElementById('medidaAncho'),
    altura: document.getElementById('medidaAltura'),
    posDel: document.getElementById('positionDelantera'),
    posTras: document.getElementById('positionTras'),
    results: document.getElementById('results'),
    count: document.getElementById('resultCount'),
    datalistMarca: document.getElementById('marcas'),
    datalistModelo: document.getElementById('modelos'),
    datalistAnio: document.getElementById('anios'),
    trashBtn: document.getElementById('trashBtn')
  };

  let data = [
    { id:1, marca:'Toyota', modelo:'Corolla', anio:2020, ref:'A123', oem:'OEM-A1', fmsi:'FMSI-100', medidas:{ancho:100, altura:50}, posicion:'Delantera' },
    { id:2, marca:'Toyota', modelo:'Camry', anio:2021, ref:'A124', oem:'OEM-A2', fmsi:'FMSI-101', medidas:{ancho:105, altura:55}, posicion:'Delantera/Trasera' },
    { id:3, marca:'Honda', modelo:'Civic', anio:2019, ref:'H456', oem:'OEM-H1', fmsi:'FMSI-200', medidas:{ancho:102, altura:52}, posicion:'Trasera' },
    { id:4, marca:'Honda', modelo:'Accord', anio:2022, ref:'H457', oem:'OEM-H2', fmsi:'FMSI-201', medidas:{ancho:107, altura:57}, posicion:'Delantera' }
  ];

  const fillDatalist = (idList, field) => {
    const unique = [...new Set(data.map(d=>d[field]))];
    idList.innerHTML = unique.map(i=>`<option value="${i}"></option>`).join('');
  }
  fillDatalist(els.datalistMarca,'marca');
  fillDatalist(els.datalistModelo,'modelo');
  fillDatalist(els.datalistAnio,'anio');

  const renderResults = (filtered) => {
    els.results.innerHTML = filtered.map(d=>`
      <div class="result-card">
        <div class="result-field"><strong>Marca:</strong> ${d.marca}</div>
        <div class="result-field"><strong>Modelo:</strong> ${d.modelo}</div>
        <div class="result-field"><strong>Año:</strong> ${d.anio}</div>
        <div class="result-field"><strong>Ref:</strong> ${d.ref}</div>
        <div class="result-field"><strong>OEM:</strong> ${d.oem}</div>
        <div class="result-field"><strong>FMSI:</strong> ${d.fmsi}</div>
        <div class="result-field"><strong>Medidas:</strong> ${d.medidas.ancho} x ${d.medidas.altura}</div>
        <div class="result-field">
          <span class="position-badge ${d.posicion.includes('Delantera')?'position-delantera':''}">Delantera</span>
          <span class="position-badge ${d.posicion.includes('Trasera')?'position-trasera':''}">Trasera</span>
        </div>
      </div>`).join('');
    els.count.textContent = filtered.length;
  }

  const filterData = () => {
    const query = els.busqueda.value.toLowerCase();
    const marca = els.marca.value.toLowerCase();
    const modelo = els.modelo.value.toLowerCase();
    const anio = els.anio.value;
    const oem = els.oem.value.toLowerCase();
    const fmsi = els.fmsi.value.toLowerCase();
    const ancho = els.ancho.value;
    const altura = els.altura.value;
    const posDel = els.posDel.classList.contains('active');
    const posTras = els.posTras.classList.contains('active');

    const filtered = data.filter(d=>{
      if(query && !(`${d.marca} ${d.modelo} ${d.ref}`.toLowerCase().includes(query))) return false;
      if(marca && d.marca.toLowerCase()!=marca) return false;
      if(modelo && d.modelo.toLowerCase()!=modelo) return false;
      if(anio && d.anio!=parseInt(anio)) return false;
      if(oem && d.oem.toLowerCase()!=oem) return false;
      if(fmsi && d.fmsi.toLowerCase()!=fmsi) return false;
      if(ancho && d.medidas.ancho!=parseFloat(ancho)) return false;
      if(altura && d.medidas.altura!=parseFloat(altura)) return false;
      if(posDel && !d.posicion.includes('Delantera')) return false;
      if(posTras && !d.posicion.includes('Trasera')) return false;
      return true;
    });
    renderResults(filtered);
  }

  [els.busqueda, els.marca, els.modelo, els.anio, els.oem, els.fmsi, els.ancho, els.altura].forEach(inp=>{
    inp.addEventListener('input', filterData);
  });
  [els.posDel, els.posTras].forEach(btn=>{
    btn.addEventListener('click', ()=>{ btn.classList.toggle('active'); filterData(); });
  });
  els.trashBtn.addEventListener('click', ()=>{
    [els.busqueda, els.marca, els.modelo, els.anio, els.oem, els.fmsi, els.ancho, els.altura].forEach(i=>i.value='');
    [els.posDel, els.posTras].forEach(b=>b.classList.remove('active'));
    filterData();
  });

  filterData();
});
</script>

</body>
</html>